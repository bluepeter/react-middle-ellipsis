{"version":3,"sources":["../../dist/index.es.js","App.js","index.js"],"names":["index_es","props","measuredParent","Object","react","node","parent","parentNode","child","querySelector","txtToEllipse","childNode","txtNode","childWidth","offsetWidth","containerWidth","str","textContent","childChars","length","delEachSide","endLeft","Math","floor","startRight","ceil","substr","ellipse","react_default","a","createElement","ref","style","width","children","Component","longText","margin","fontFamily","lineHeight","whiteSpace","className","display","alignItems","overflow","href","ReactDOM","render","App","document","getElementById"],"mappings":"4JAuCeA,EArCF,SAAAC,GACb,IAAAC,EAAuBC,OAAAC,EAAA,YAAAD,CAAW,SAAAE,GAiBlC,UAAAA,EAAA,CACA,IAAAC,EAAAD,EAAAE,WACAC,EAAAF,EAAAG,cAAA,qBACAC,EAAAJ,EAAAG,cAAA,uBAEA,OAAAD,GAAA,OAAAE,GArBA,SAAAH,EAAAI,EAAAC,GACA,IAAAC,EAAAF,EAAAG,YACAC,EAAAR,EAAAO,YAEA,OAAAD,EAAAE,EAAA,CACA,IAAAC,EAAAJ,EAAAK,YACAC,EAAAF,EAAAG,OAGAC,GAAAF,EADAH,GADAF,EAAAK,GAEA,KACAG,EAAAC,KAAAC,MAAAL,EAAA,EAAAE,GACAI,EAAAF,KAAAG,KAAAP,EAAA,EAAAE,GACAR,EAAAK,YAAAD,EAAAU,OAAA,EAAAL,GAAA,MAAAL,EAAAU,OAAAF,IAUAG,CACAtB,EAAAS,YAAAR,EAAAQ,YAAAR,EAAAD,EAAAG,EAAAE,MAIA,OAASkB,EAAAC,EAAKC,cAAA,OACdC,IAAA7B,EACA8B,MAAA,CACAC,MAAA,SAEGhC,EAAAiC,WCwEYC,EAxGG,SAAAlC,GAChB,IAAMmC,EACJ,8HACF,OACER,EAAAC,EAAAC,cAAA,OACEE,MAAO,CACLK,OAAQ,QACRC,WAAY,aACZC,WAAY,MACZC,WAAY,WAGdZ,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,0HAIAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC9B,EAAD,KACE4B,EAAAC,EAAAC,cAAA,QAAMW,UAAU,oBACdb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,sBAAsBL,MAI5CR,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEC,MAAO,UACnBL,EAAAC,EAAAC,cAAC9B,EAAD,KACE4B,EAAAC,EAAAC,cAAA,QAAMW,UAAU,oBACdb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,sBAAsBL,MAI5CR,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEC,MAAO,UACnBL,EAAAC,EAAAC,cAAC9B,EAAD,KACE4B,EAAAC,EAAAC,cAAA,QAAMW,UAAU,oBACdb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,sBAAsBL,MAI5CR,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEC,MAAO,UACnBL,EAAAC,EAAAC,cAAC9B,EAAD,KACE4B,EAAAC,EAAAC,cAAA,QAAMW,UAAU,oBACdb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,sBAAsBL,MAI5CR,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEC,MAAO,UACnBL,EAAAC,EAAAC,cAAC9B,EAAD,KACE4B,EAAAC,EAAAC,cAAA,QAAMW,UAAU,oBACdb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,sBAAsBL,MAI5CR,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEC,MAAO,UACnBL,EAAAC,EAAAC,cAAC9B,EAAD,KACE4B,EAAAC,EAAAC,cAAA,QAAMW,UAAU,oBACdb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,sBAAsBL,MAK5CR,EAAAC,EAAAC,cAAA,oGAIAF,EAAAC,EAAAC,cAAA,OACEE,MAAO,CACLC,MAAO,QACPS,QAAS,OACTC,WAAY,SACZC,SAAU,WAGZhB,EAAAC,EAAAC,cAAC9B,EAAD,KACE4B,EAAAC,EAAAC,cAAA,QAAMW,UAAU,oBACdb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,sBAAhB,QAKNb,EAAAC,EAAAC,cAAA,6EACAF,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEC,MAAO,UACnBL,EAAAC,EAAAC,cAAC9B,EAAD,KACE4B,EAAAC,EAAAC,cAAA,QAAMW,UAAU,oBAAhB,2BAC2B,IACzBb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,sBAAsBL,MAI5CR,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEC,MAAO,UACnBL,EAAAC,EAAAC,cAAC9B,EAAD,KACE4B,EAAAC,EAAAC,cAAA,QAAMW,UAAU,oBAAhB,2BAC2B,IACzBb,EAAAC,EAAAC,cAAA,QAAMW,UAAU,sBAAsBL,KAG1CR,EAAAC,EAAAC,cAAA,mDAC0C,IACxCF,EAAAC,EAAAC,cAAA,KAAGe,KAAK,2BAAR,4BChGVC,EAASC,OAAOnB,EAAAC,EAAAC,cAACkB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.aba130a9.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\n\nvar Component = function Component(props) {\n  var measuredParent = useCallback(function (node) {\n    function ellipse(parentNode, childNode, txtNode) {\n      var childWidth = childNode.offsetWidth,\n          containerWidth = parentNode.offsetWidth;\n\n      if (childWidth * 1.1 > containerWidth) {\n        var str = txtNode.textContent,\n            childChars = str.length,\n            avgLetterSize = childWidth / childChars,\n            canFit = containerWidth / avgLetterSize,\n            delEachSide = (childChars - canFit + 5) / 2,\n            endLeft = Math.floor(childChars / 2 - delEachSide),\n            startRight = Math.ceil(childChars / 2 + delEachSide);\n        txtNode.textContent = str.substr(0, endLeft) + \"...\" + str.substr(startRight);\n      }\n    }\n\n    if (node !== null) {\n      var parent = node.parentNode,\n          child = parent.querySelector(\".constrainedChild\"),\n          txtToEllipse = parent.querySelector(\".constrainedEllipse\");\n\n      if (child !== null && txtToEllipse !== null) {\n        ellipse( // Use the smaller width.\n        node.offsetWidth > parent.offsetWidth ? parent : node, child, txtToEllipse);\n      }\n    }\n  });\n  return React.createElement(\"div\", {\n    ref: measuredParent,\n    style: {\n      width: \"100%\"\n    }\n  }, props.children);\n};\n\nexport default Component;","import React from \"react\";\n\nimport MiddleEllipsis from \"react-middle-ellipsis\";\n\nconst Component = props => {\n  const longText =\n    \"https://thisIsAVeryLongUrl/that/needs/to/be/truncated/in/the/middle/so/that/the/important/end/matter/is/preserved/here.html\";\n  return (\n    <div\n      style={{\n        margin: \"100px\",\n        fontFamily: \"sans-serif\",\n        lineHeight: \"2em\",\n        whiteSpace: \"nowrap\",\n      }}\n    >\n      <h3>Let's do some middle ellipsing!</h3>\n      <p>\n        We are constraining the width of the following lines (view source). Note\n        the long URL ellipses in the middle.\n      </p>\n      <div>\n        <MiddleEllipsis>\n          <span className=\"constrainedChild\">\n            <span className=\"constrainedEllipse\">{longText}</span>\n          </span>\n        </MiddleEllipsis>\n      </div>\n      <div style={{ width: \"550px\" }}>\n        <MiddleEllipsis>\n          <span className=\"constrainedChild\">\n            <span className=\"constrainedEllipse\">{longText}</span>\n          </span>\n        </MiddleEllipsis>\n      </div>\n      <div style={{ width: \"450px\" }}>\n        <MiddleEllipsis>\n          <span className=\"constrainedChild\">\n            <span className=\"constrainedEllipse\">{longText}</span>\n          </span>\n        </MiddleEllipsis>\n      </div>\n      <div style={{ width: \"350px\" }}>\n        <MiddleEllipsis>\n          <span className=\"constrainedChild\">\n            <span className=\"constrainedEllipse\">{longText}</span>\n          </span>\n        </MiddleEllipsis>\n      </div>\n      <div style={{ width: \"250px\" }}>\n        <MiddleEllipsis>\n          <span className=\"constrainedChild\">\n            <span className=\"constrainedEllipse\">{longText}</span>\n          </span>\n        </MiddleEllipsis>\n      </div>\n      <div style={{ width: \"150px\" }}>\n        <MiddleEllipsis>\n          <span className=\"constrainedChild\">\n            <span className=\"constrainedEllipse\">{longText}</span>\n          </span>\n        </MiddleEllipsis>\n      </div>\n\n      <p>\n        We also work in odd corner cases (note there shouldn't be an ellipse in\n        the following):\n      </p>\n      <div\n        style={{\n          width: \"150px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          overflow: \"hidden\",\n        }}\n      >\n        <MiddleEllipsis>\n          <span className=\"constrainedChild\">\n            <span className=\"constrainedEllipse\">/</span>\n          </span>\n        </MiddleEllipsis>\n      </div>\n\n      <p>You can also add text that we *don't* want ellipsed at all, too:</p>\n      <div style={{ width: \"350px\" }}>\n        <MiddleEllipsis>\n          <span className=\"constrainedChild\">\n            Don't ellipse me though.{\" \"}\n            <span className=\"constrainedEllipse\">{longText}</span>\n          </span>\n        </MiddleEllipsis>\n      </div>\n      <div style={{ width: \"250px\" }}>\n        <MiddleEllipsis>\n          <span className=\"constrainedChild\">\n            Don't ellipse me though.{\" \"}\n            <span className=\"constrainedEllipse\">{longText}</span>\n          </span>\n        </MiddleEllipsis>\n        <p>\n          Brought to you by the friendly folks at{\" \"}\n          <a href=\"https://foxandgeese.com\">Fox and Geese</a>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Component;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}